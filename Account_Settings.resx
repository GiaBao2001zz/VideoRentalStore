<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>